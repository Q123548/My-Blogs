import{_ as a,p as e,q as i,a1 as p}from"./framework-efe98465.js";const r={},h=p('<h1 id="at89c52" tabindex="-1"><a class="header-anchor" href="#at89c52" aria-hidden="true">#</a> AT89C52</h1><p>中断源 名称 中断 INT0:外部中断0 中断请求IE0 INT1:外部中断1 中断请求IE0 T0:定时器中断0 TF0<br> T1:定时器中断1 TF1 RXD/TXD:串口中断 TI/RI</p><h2 id="外部中断" tabindex="-1"><a class="header-anchor" href="#外部中断" aria-hidden="true">#</a> 外部中断</h2><p>外部中断的触发方式有两种电平触发IT0 = 0 跳变触发(边沿)IT0 = 1，可以通过定时/计数器控制寄存器TCON编程选择。</p><h2 id="中断有关的特殊功能寄存器" tabindex="-1"><a class="header-anchor" href="#中断有关的特殊功能寄存器" aria-hidden="true">#</a> 中断有关的特殊功能寄存器</h2><ol><li>定时/计数器控制寄存器(TCON)</li><li>串行口控制寄存器(SCON)</li><li>中断允许控制寄存器(IE)</li><li>中断优先级控制寄存器(IP)</li></ol><h3 id="定时-计数器控制寄存器-tcon" tabindex="-1"><a class="header-anchor" href="#定时-计数器控制寄存器-tcon" aria-hidden="true">#</a> 定时/计数器控制寄存器(TCON)</h3><p>作用： TR0: TR1 TF0 TF1</p><ol><li><p>控制定时/计数器IE0和IE1的溢出中断</p></li><li><p>控制外部中断的触发方式.由IT0和IT1控制</p></li><li><p>锁存外部中断请求标志位</p></li></ol><h3 id="串行口控制寄存器-scon" tabindex="-1"><a class="header-anchor" href="#串行口控制寄存器-scon" aria-hidden="true">#</a> 串行口控制寄存器(SCON)</h3><p>串行口的接收发送数据中断请求标志位(RI和TI) TI:串行口发送中断请求标志位。CPU每发送一帧数据，硬件置位1(TI=1)，但是中断被响应时，需要在中断服务程序中通过软件对TI清零 RI:串行口接受中断请求标志位。每接收一帧数据，硬件置位1(TI=1)，但是中断被响应时，一样需要在中断服务程序中通过软件对TI清零</p><p>串行口中断不能由硬件自动清除中断请求标志位，需要用户通过软件进行控制清零。</p><h3 id="中断允许控制寄存器-ie" tabindex="-1"><a class="header-anchor" href="#中断允许控制寄存器-ie" aria-hidden="true">#</a> 中断允许控制寄存器(IE)</h3><p>IE是控制中断的开关，通过对IE的清0和置1操作来控制中断的屏蔽和开放。</p><p>EA 总中断允许控制位。当EA=0时，不允许任何中断请求。</p><p>ES 串行口中断控制位。当ES=0时，不允许串行口中断；当EA=1且ES=1时，允许串行口中断。</p><p>ET1 定时/计数器1中断允许控制位。当ET1=0时，屏蔽T1的溢出中断；当EA=1且ET1=1时，允许T1溢出中断</p><p>ET0 定时/计数器0中断允许控制位。功能与ET1相同。</p><p>EX1 外部中断1的中断允许控制位。当EX1=0时，屏蔽外部中断1的中断请求；当EA=1且EX1=1时，允许外部中断1的中断请求</p><p>EX0 外部中断0的中断允许控制位。功能与EX1相同</p><h3 id="中断优先级控制寄存器-ip" tabindex="-1"><a class="header-anchor" href="#中断优先级控制寄存器-ip" aria-hidden="true">#</a> 中断优先级控制寄存器(IP)</h3><p>PS 串行口中断优先级控制位。PS=1，串行口中断为高优先级；PS=0，为低优先级。</p><p>PT1 定时/计数器1中断优先级控制位。当PT1=0时，T1溢出中断为低优先级；当PT1=1时，T1溢出中断为高优先级。</p><p>PT0 定时/计数器0中断优先级控制位。当PT0=0时，T0溢出中断为低优先级；当PT0=1时，T0溢出中断为高优先级。</p><p>PX1 外部中断1的中断优先级控制位。当PX1=0时，外部中断1为低优先级；当PX1=1时，外部中断1为高优先级。</p><p>PX0 外部中断0的中断优先级控制位。当PX0=0时，外部中断0为低优先级；当PX0=1时，外部中断0为高优先级。</p><p>同级内第二优先级的次序： 外部中断0 &gt; T0溢出中断 &gt; 外部中断1 &gt; T1溢出中断 &gt; 串行口中断</p>',27),T=[h];function d(t,n){return e(),i("div",null,T)}const l=a(r,[["render",d],["__file","01.中断.html.vue"]]);export{l as default};
